generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  role      Role       @default(CUSTOMER)
  contact   String
  orders    Order[]
  discounts Discount[] // One user can have multiple discounts
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("users")
}

model Book {
  id          Int         @id @default(autoincrement())
  title       String
  author      String
  price       Float
  stock       Int
  wholesale   Boolean     @default(false)
  classId     Int
  subjectId   Int
  description String?     @db.Text
  imageUrl    String      @default("https://via.placeholder.com/150")
  class       Class       @relation(fields: [classId], references: [id])
  subject     Subject     @relation(fields: [subjectId], references: [id])
  discounts   Discount[]
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([classId], map: "Book_classId_fkey")
  @@index([subjectId], map: "Book_subjectId_fkey")
  @@map("books")
}

model Class {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?
  books       Book[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("classes")
}

model Subject {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?
  books       Book[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("subjects")
}

enum DiscountType {
  USER
  BOOK
}

model Discount {
  id         Int           @id @default(autoincrement())
  type       Discount_type
  userId     Int? // Foreign key for User (optional)
  bookId     Int? // Foreign key for Book (optional)
  amount     Float
  validUntil DateTime
  user       User?         @relation(fields: [userId], references: [id]) // Fix: Add relation to User
  book       Book?         @relation(fields: [bookId], references: [id])
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  @@index([bookId], map: "Discount_bookId_fkey")
  @@map("discounts")
}

model Order {
  id        Int         @id @default(autoincrement())
  userId    Int
  total     Float
  orderDate DateTime    @default(now())
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@index([userId], map: "Order_userId_fkey")
  @@map("orders")
}

model OrderItem {
  id       Int   @id @default(autoincrement())
  orderId  Int
  bookId   Int
  quantity Int
  book     Book  @relation(fields: [bookId], references: [id])
  order    Order @relation(fields: [orderId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([bookId], map: "OrderItem_bookId_fkey")
  @@index([orderId], map: "OrderItem_orderId_fkey")
  @@map("order_items")
}

enum Role {
  CUSTOMER
  ADMIN
}

enum Discount_type {
  USER
  BOOK
}
